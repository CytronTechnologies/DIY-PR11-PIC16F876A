

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jun 25 12:31:38 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  000E                     	;# 
    37  000F                     	;# 
    38  0010                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  001F                     _ADCON0	set	31
    80  001E                     _ADRESH	set	30
    81  0005                     _PORTA	set	5
    82  0006                     _PORTB	set	6
    83  0007                     _PORTC	set	7
    84  00FA                     _GO	set	250
    85  002A                     _RA2	set	42
    86  002D                     _RA5	set	45
    87  0031                     _RB1	set	49
    88  0032                     _RB2	set	50
    89  0033                     _RB3	set	51
    90  0034                     _RB4	set	52
    91  0035                     _RB5	set	53
    92  009F                     _ADCON1	set	159
    93  009E                     _ADRESL	set	158
    94  0085                     _TRISA	set	133
    95  0086                     _TRISB	set	134
    96  0087                     _TRISC	set	135
    97                           
    98                           	psect	text0
    99  0000                     __ptext0:	
   100                           
   101                           ;psect for function _delay
   102                           ; #config settings
   103  0000                     
   104                           	psect	cinit
   105  07F2                     start_initialization:	
   106  07F2                     __initialization:	
   107                           
   108                           ; Clear objects allocated to BANK0
   109  07F2  01AE               	clrf	__pbssBANK0& (0+127)
   110  07F3  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   111  07F4  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   112  07F5  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   113  07F6  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   114  07F7  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   115  07F8  01B4               	clrf	(__pbssBANK0+6)& (0+127)
   116  07F9  01B5               	clrf	(__pbssBANK0+7)& (0+127)
   117  07FA  01B6               	clrf	(__pbssBANK0+8)& (0+127)
   118  07FB  01B7               	clrf	(__pbssBANK0+9)& (0+127)
   119  07FC                     end_of_initialization:	
   120                           ;End of C runtime variable initialization code
   121                           
   122  07FC                     __end_of__initialization:	
   123  07FC  0183               	clrf	3
   124  07FD  120A  118A  2DEC   	ljmp	_main	;jump to C main() function
   125                           
   126                           	psect	bssBANK0
   127  002E                     __pbssBANK0:	
   128  002E                     _result:	
   129  002E                     	ds	2
   130  0030                     _temperatureA:	
   131  0030                     	ds	2
   132  0032                     _temperatureB:	
   133  0032                     	ds	2
   134  0034                     _temporary1:	
   135  0034                     	ds	2
   136  0036                     _temporary2:	
   137  0036                     	ds	2
   138                           
   139                           	psect	cstackCOMMON
   140  0070                     __pcstackCOMMON:	
   141  0070                     ?_send_config:	
   142  0070                     ?_lcd_goto:	
   143                           ; 0 bytes @ 0x0
   144                           
   145  0070                     ?_send_char:	
   146                           ; 0 bytes @ 0x0
   147                           
   148  0070                     ?_read_adc:	
   149                           ; 0 bytes @ 0x0
   150                           
   151  0070                     ?_delay:	
   152                           ; 0 bytes @ 0x0
   153                           
   154  0070                     ?_e_pulse:	
   155                           ; 0 bytes @ 0x0
   156                           
   157  0070                     ?_main:	
   158                           ; 0 bytes @ 0x0
   159                           
   160  0070                     ?_read_temp:	
   161                           ; 0 bytes @ 0x0
   162                           
   163  0070                     ?___lwdiv:	
   164                           ; 2 bytes @ 0x0
   165                           
   166  0070                     ?___lwmod:	
   167                           ; 2 bytes @ 0x0
   168                           
   169  0070                     ?___lldiv:	
   170                           ; 2 bytes @ 0x0
   171                           
   172  0070                     ?___llmod:	
   173                           ; 4 bytes @ 0x0
   174                           
   175  0070                     delay@i:	
   176                           ; 4 bytes @ 0x0
   177                           
   178  0070                     ___lwdiv@divisor:	
   179                           ; 2 bytes @ 0x0
   180                           
   181  0070                     ___lwmod@divisor:	
   182                           ; 2 bytes @ 0x0
   183                           
   184  0070                     ___lldiv@divisor:	
   185                           ; 2 bytes @ 0x0
   186                           
   187  0070                     ___llmod@divisor:	
   188                           ; 4 bytes @ 0x0
   189                           
   190                           
   191                           ; 4 bytes @ 0x0
   192  0070                     	ds	2
   193  0072                     ??_send_config:	
   194  0072                     ??_send_char:	
   195                           ; 0 bytes @ 0x2
   196                           
   197  0072                     ??_read_temp:	
   198                           ; 0 bytes @ 0x2
   199                           
   200  0072                     ??_delay:	
   201                           ; 0 bytes @ 0x2
   202                           
   203  0072                     ??_e_pulse:	
   204                           ; 0 bytes @ 0x2
   205                           
   206  0072                     send_config@data:	
   207                           ; 0 bytes @ 0x2
   208                           
   209  0072                     send_char@data:	
   210                           ; 1 bytes @ 0x2
   211                           
   212  0072                     read_temp@temp:	
   213                           ; 1 bytes @ 0x2
   214                           
   215  0072                     ___lwdiv@dividend:	
   216                           ; 2 bytes @ 0x2
   217                           
   218  0072                     ___lwmod@dividend:	
   219                           ; 2 bytes @ 0x2
   220                           
   221                           
   222                           ; 2 bytes @ 0x2
   223  0072                     	ds	1
   224  0073                     ??_lcd_goto:	
   225                           
   226                           ; 0 bytes @ 0x3
   227  0073                     	ds	1
   228  0074                     ??___lwdiv:	
   229  0074                     ??___lwmod:	
   230                           ; 0 bytes @ 0x4
   231                           
   232  0074                     lcd_goto@data:	
   233                           ; 0 bytes @ 0x4
   234                           
   235  0074                     ___lldiv@dividend:	
   236                           ; 1 bytes @ 0x4
   237                           
   238  0074                     ___llmod@dividend:	
   239                           ; 4 bytes @ 0x4
   240                           
   241                           
   242                           ; 4 bytes @ 0x4
   243  0074                     	ds	1
   244  0075                     ___lwmod@counter:	
   245  0075                     ___lwdiv@quotient:	
   246                           ; 1 bytes @ 0x5
   247                           
   248                           
   249                           ; 2 bytes @ 0x5
   250  0075                     	ds	2
   251  0077                     ___lwdiv@counter:	
   252                           
   253                           ; 1 bytes @ 0x7
   254  0077                     	ds	1
   255  0078                     ??___lldiv:	
   256  0078                     ??___llmod:	
   257                           ; 0 bytes @ 0x8
   258                           
   259                           
   260                           ; 0 bytes @ 0x8
   261  0078                     	ds	1
   262  0079                     ___llmod@counter:	
   263  0079                     ___lldiv@quotient:	
   264                           ; 1 bytes @ 0x9
   265                           
   266                           
   267                           ; 4 bytes @ 0x9
   268  0079                     	ds	4
   269  007D                     ___lldiv@counter:	
   270                           
   271                           ; 1 bytes @ 0xD
   272  007D                     	ds	1
   273                           
   274                           	psect	cstackBANK0
   275  0020                     __pcstackBANK0:	
   276  0020                     ??_read_adc:	
   277  0020                     ?_dis_num:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0020                     dis_num@data:	
   281                           ; 0 bytes @ 0x0
   282                           
   283                           
   284                           ; 4 bytes @ 0x0
   285  0020                     	ds	4
   286  0024                     ??_dis_num:	
   287  0024                     read_adc@result_temp:	
   288                           ; 0 bytes @ 0x4
   289                           
   290                           
   291                           ; 4 bytes @ 0x4
   292  0024                     	ds	1
   293  0025                     dis_num@hundred_thousand:	
   294                           
   295                           ; 1 bytes @ 0x5
   296  0025                     	ds	1
   297  0026                     dis_num@ten_thousand:	
   298                           
   299                           ; 1 bytes @ 0x6
   300  0026                     	ds	1
   301  0027                     dis_num@thousand:	
   302                           
   303                           ; 1 bytes @ 0x7
   304  0027                     	ds	1
   305  0028                     dis_num@hundred:	
   306  0028                     read_adc@i:	
   307                           ; 1 bytes @ 0x8
   308                           
   309                           
   310                           ; 2 bytes @ 0x8
   311  0028                     	ds	1
   312  0029                     dis_num@tenth:	
   313                           
   314                           ; 1 bytes @ 0x9
   315  0029                     	ds	1
   316  002A                     ??_main:	
   317                           
   318                           ; 0 bytes @ 0xA
   319  002A                     	ds	4
   320                           
   321                           	psect	maintext
   322  05EC                     __pmaintext:	
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 65 in file "../../Source File/PR11.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;		None               void
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 17F/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0
   344 ;;      Temps:          0       4       0       0       0
   345 ;;      Totals:         0       4       0       0       0
   346 ;;Total ram usage:        4 bytes
   347 ;; Hardware stack levels required when called:    4
   348 ;; This function calls:
   349 ;;		_send_config
   350 ;;		_lcd_goto
   351 ;;		_send_char
   352 ;;		_read_adc
   353 ;;		_read_temp
   354 ;;		_dis_num
   355 ;;		_delay
   356 ;;		___lwdiv
   357 ;;		___lwmod
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           
   364                           ;psect for function _main
   365  05EC                     _main:	
   366                           
   367                           ;PR11.c: 66: ADRESH=0;
   368                           
   369                           ;incstack = 0
   370                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   371  05EC  1283               	bcf	3,5	;RP0=0, select bank0
   372  05ED  1303               	bcf	3,6	;RP1=0, select bank0
   373  05EE  019E               	clrf	30	;volatile
   374                           
   375                           ;PR11.c: 67: ADRESL=0;
   376  05EF  1683               	bsf	3,5	;RP0=1, select bank1
   377  05F0  1303               	bcf	3,6	;RP1=0, select bank1
   378  05F1  019E               	clrf	30	;volatile
   379                           
   380                           ;PR11.c: 70: ADCON1=0b11000101;
   381  05F2  30C5               	movlw	197
   382  05F3  009F               	movwf	31	;volatile
   383                           
   384                           ;PR11.c: 73: TRISA=0b11011011;
   385  05F4  30DB               	movlw	219
   386  05F5  0085               	movwf	5	;volatile
   387                           
   388                           ;PR11.c: 74: TRISB=0b00000000;
   389  05F6  0186               	clrf	6	;volatile
   390                           
   391                           ;PR11.c: 75: TRISC=0b00000000;
   392  05F7  0187               	clrf	7	;volatile
   393                           
   394                           ;PR11.c: 77: PORTA=0;
   395  05F8  1283               	bcf	3,5	;RP0=0, select bank0
   396  05F9  1303               	bcf	3,6	;RP1=0, select bank0
   397  05FA  0185               	clrf	5	;volatile
   398                           
   399                           ;PR11.c: 78: PORTB=0;
   400  05FB  0186               	clrf	6	;volatile
   401                           
   402                           ;PR11.c: 81: {
   403                           ;PR11.c: 82: send_config(0b00000001);
   404                           
   405                           ;PR11.c: 80: while(1)
   406  05FC  3001               	movlw	1
   407  05FD  120A  118A  2225   	fcall	_send_config
      +       120A  118A         
   408                           
   409                           ;PR11.c: 83: send_config(0b00000010);
   410  0602  3002               	movlw	2
   411  0603  120A  118A  2225   	fcall	_send_config
      +       120A  118A         
   412                           
   413                           ;PR11.c: 84: send_config(0b00000110);
   414  0608  3006               	movlw	6
   415  0609  120A  118A  2225   	fcall	_send_config
      +       120A  118A         
   416                           
   417                           ;PR11.c: 85: send_config(0b00001100);
   418  060E  300C               	movlw	12
   419  060F  120A  118A  2225   	fcall	_send_config
      +       120A  118A         
   420                           
   421                           ;PR11.c: 86: send_config(0b00111000);
   422  0614  3038               	movlw	56
   423  0615  120A  118A  2225   	fcall	_send_config
      +       120A  118A         
   424                           
   425                           ;PR11.c: 88: lcd_goto(0);
   426  061A  3000               	movlw	0
   427  061B  120A  118A  224B   	fcall	_lcd_goto
      +       120A  118A         
   428                           
   429                           ;PR11.c: 91: send_char(' ');
   430  0620  3020               	movlw	32
   431  0621  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   432                           
   433                           ;PR11.c: 92: send_char('T');
   434  0626  3054               	movlw	84
   435  0627  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   436                           
   437                           ;PR11.c: 93: send_char('E');
   438  062C  3045               	movlw	69
   439  062D  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   440                           
   441                           ;PR11.c: 94: send_char('M');
   442  0632  304D               	movlw	77
   443  0633  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   444                           
   445                           ;PR11.c: 95: send_char('P');
   446  0638  3050               	movlw	80
   447  0639  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   448                           
   449                           ;PR11.c: 96: send_char('.');
   450  063E  302E               	movlw	46
   451  063F  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   452                           
   453                           ;PR11.c: 97: send_char('A');
   454  0644  3041               	movlw	65
   455  0645  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   456                           
   457                           ;PR11.c: 98: send_char('=');
   458  064A  303D               	movlw	61
   459  064B  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   460                           
   461                           ;PR11.c: 100: lcd_goto(20);
   462  0650  3014               	movlw	20
   463  0651  120A  118A  224B   	fcall	_lcd_goto
      +       120A  118A         
   464                           
   465                           ;PR11.c: 103: send_char(' ');
   466  0656  3020               	movlw	32
   467  0657  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   468                           
   469                           ;PR11.c: 104: send_char('T');
   470  065C  3054               	movlw	84
   471  065D  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   472                           
   473                           ;PR11.c: 105: send_char('E');
   474  0662  3045               	movlw	69
   475  0663  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   476                           
   477                           ;PR11.c: 106: send_char('M');
   478  0668  304D               	movlw	77
   479  0669  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   480                           
   481                           ;PR11.c: 107: send_char('P');
   482  066E  3050               	movlw	80
   483  066F  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   484                           
   485                           ;PR11.c: 108: send_char('.');
   486  0674  302E               	movlw	46
   487  0675  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   488                           
   489                           ;PR11.c: 109: send_char('B');
   490  067A  3042               	movlw	66
   491  067B  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   492                           
   493                           ;PR11.c: 110: send_char('=');
   494  0680  303D               	movlw	61
   495  0681  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   496  0686                     l1420:	
   497                           ;PR11.c: 112: while(1)
   498                           
   499                           
   500                           ;PR11.c: 113: {
   501                           ;PR11.c: 115: ADCON0=0b10001001;
   502  0686  3089               	movlw	137
   503  0687  1283               	bcf	3,5	;RP0=0, select bank0
   504  0688  1303               	bcf	3,6	;RP1=0, select bank0
   505  0689  009F               	movwf	31	;volatile
   506                           
   507                           ;PR11.c: 116: lcd_goto(8);
   508  068A  3008               	movlw	8
   509  068B  120A  118A  224B   	fcall	_lcd_goto
      +       120A  118A         
   510                           
   511                           ;PR11.c: 118: read_adc();
   512  0690  120A  118A  2394   	fcall	_read_adc
      +       120A  118A         
   513                           
   514                           ;PR11.c: 120: temporary1=read_temp();
   515  0695  120A  118A  2216   	fcall	_read_temp
      +       120A  118A         
   516  069A  0871               	movf	?_read_temp+1,w
   517  069B  1283               	bcf	3,5	;RP0=0, select bank0
   518  069C  1303               	bcf	3,6	;RP1=0, select bank0
   519  069D  01B5               	clrf	_temporary1+1
   520  069E  07B5               	addwf	_temporary1+1,f
   521  069F  0870               	movf	?_read_temp,w
   522  06A0  01B4               	clrf	_temporary1
   523  06A1  07B4               	addwf	_temporary1,f
   524                           
   525                           ;PR11.c: 121: dis_num(temporary1/10);
   526  06A2  300A               	movlw	10
   527  06A3  00F0               	movwf	?___lwdiv
   528  06A4  3000               	movlw	0
   529  06A5  00F1               	movwf	?___lwdiv+1
   530  06A6  0835               	movf	_temporary1+1,w
   531  06A7  01F3               	clrf	?___lwdiv+3
   532  06A8  07F3               	addwf	?___lwdiv+3,f
   533  06A9  0834               	movf	_temporary1,w
   534  06AA  01F2               	clrf	?___lwdiv+2
   535  06AB  07F2               	addwf	?___lwdiv+2,f
   536  06AC  120A  118A  22AC   	fcall	___lwdiv
      +       120A  118A         
   537  06B1  0870               	movf	?___lwdiv,w
   538  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   539  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   540  06B4  00AA               	movwf	??_main
   541  06B5  0871               	movf	?___lwdiv+1,w
   542  06B6  00AB               	movwf	??_main+1
   543  06B7  01AC               	clrf	??_main+2
   544  06B8  01AD               	clrf	??_main+3
   545  06B9  082D               	movf	??_main+3,w
   546  06BA  00A3               	movwf	?_dis_num+3
   547  06BB  082C               	movf	??_main+2,w
   548  06BC  00A2               	movwf	?_dis_num+2
   549  06BD  082B               	movf	??_main+1,w
   550  06BE  00A1               	movwf	?_dis_num+1
   551  06BF  082A               	movf	??_main,w
   552  06C0  00A0               	movwf	?_dis_num
   553  06C1  120A  118A  2404   	fcall	_dis_num
      +       120A  118A         
   554                           
   555                           ;PR11.c: 122: send_char('.');
   556  06C6  302E               	movlw	46
   557  06C7  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   558                           
   559                           ;PR11.c: 123: dis_num(temporary1%10);
   560  06CC  300A               	movlw	10
   561  06CD  00F0               	movwf	?___lwmod
   562  06CE  3000               	movlw	0
   563  06CF  00F1               	movwf	?___lwmod+1
   564  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   565  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   566  06D2  0835               	movf	_temporary1+1,w
   567  06D3  01F3               	clrf	?___lwmod+3
   568  06D4  07F3               	addwf	?___lwmod+3,f
   569  06D5  0834               	movf	_temporary1,w
   570  06D6  01F2               	clrf	?___lwmod+2
   571  06D7  07F2               	addwf	?___lwmod+2,f
   572  06D8  120A  118A  2278   	fcall	___lwmod
      +       120A  118A         
   573  06DD  0870               	movf	?___lwmod,w
   574  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   575  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   576  06E0  00AA               	movwf	??_main
   577  06E1  0871               	movf	?___lwmod+1,w
   578  06E2  00AB               	movwf	??_main+1
   579  06E3  01AC               	clrf	??_main+2
   580  06E4  01AD               	clrf	??_main+3
   581  06E5  082D               	movf	??_main+3,w
   582  06E6  00A3               	movwf	?_dis_num+3
   583  06E7  082C               	movf	??_main+2,w
   584  06E8  00A2               	movwf	?_dis_num+2
   585  06E9  082B               	movf	??_main+1,w
   586  06EA  00A1               	movwf	?_dis_num+1
   587  06EB  082A               	movf	??_main,w
   588  06EC  00A0               	movwf	?_dis_num
   589  06ED  120A  118A  2404   	fcall	_dis_num
      +       120A  118A         
   590                           
   591                           ;PR11.c: 124: send_char(0b11011111);
   592  06F2  30DF               	movlw	223
   593  06F3  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   594                           
   595                           ;PR11.c: 125: send_char('C');
   596  06F8  3043               	movlw	67
   597  06F9  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   598                           
   599                           ;PR11.c: 126: send_char(' ');
   600  06FE  3020               	movlw	32
   601  06FF  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   602                           
   603                           ;PR11.c: 127: send_char(' ');
   604  0704  3020               	movlw	32
   605  0705  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   606                           
   607                           ;PR11.c: 129: temperatureA=temporary1;
   608  070A  1283               	bcf	3,5	;RP0=0, select bank0
   609  070B  1303               	bcf	3,6	;RP1=0, select bank0
   610  070C  0835               	movf	_temporary1+1,w
   611  070D  01B1               	clrf	_temperatureA+1
   612  070E  07B1               	addwf	_temperatureA+1,f
   613  070F  0834               	movf	_temporary1,w
   614  0710  01B0               	clrf	_temperatureA
   615  0711  07B0               	addwf	_temperatureA,f
   616                           
   617                           ;PR11.c: 132: ADCON0=0b10000001;
   618  0712  3081               	movlw	129
   619  0713  009F               	movwf	31	;volatile
   620                           
   621                           ;PR11.c: 134: lcd_goto(28);
   622  0714  301C               	movlw	28
   623  0715  120A  118A  224B   	fcall	_lcd_goto
      +       120A  118A         
   624                           
   625                           ;PR11.c: 136: read_adc();
   626  071A  120A  118A  2394   	fcall	_read_adc
      +       120A  118A         
   627                           
   628                           ;PR11.c: 138: temporary2=read_temp();
   629  071F  120A  118A  2216   	fcall	_read_temp
      +       120A  118A         
   630  0724  0871               	movf	?_read_temp+1,w
   631  0725  1283               	bcf	3,5	;RP0=0, select bank0
   632  0726  1303               	bcf	3,6	;RP1=0, select bank0
   633  0727  01B7               	clrf	_temporary2+1
   634  0728  07B7               	addwf	_temporary2+1,f
   635  0729  0870               	movf	?_read_temp,w
   636  072A  01B6               	clrf	_temporary2
   637  072B  07B6               	addwf	_temporary2,f
   638                           
   639                           ;PR11.c: 139: dis_num(temporary2/10);
   640  072C  300A               	movlw	10
   641  072D  00F0               	movwf	?___lwdiv
   642  072E  3000               	movlw	0
   643  072F  00F1               	movwf	?___lwdiv+1
   644  0730  0837               	movf	_temporary2+1,w
   645  0731  01F3               	clrf	?___lwdiv+3
   646  0732  07F3               	addwf	?___lwdiv+3,f
   647  0733  0836               	movf	_temporary2,w
   648  0734  01F2               	clrf	?___lwdiv+2
   649  0735  07F2               	addwf	?___lwdiv+2,f
   650  0736  120A  118A  22AC   	fcall	___lwdiv
      +       120A  118A         
   651  073B  0870               	movf	?___lwdiv,w
   652  073C  1283               	bcf	3,5	;RP0=0, select bank0
   653  073D  1303               	bcf	3,6	;RP1=0, select bank0
   654  073E  00AA               	movwf	??_main
   655  073F  0871               	movf	?___lwdiv+1,w
   656  0740  00AB               	movwf	??_main+1
   657  0741  01AC               	clrf	??_main+2
   658  0742  01AD               	clrf	??_main+3
   659  0743  082D               	movf	??_main+3,w
   660  0744  00A3               	movwf	?_dis_num+3
   661  0745  082C               	movf	??_main+2,w
   662  0746  00A2               	movwf	?_dis_num+2
   663  0747  082B               	movf	??_main+1,w
   664  0748  00A1               	movwf	?_dis_num+1
   665  0749  082A               	movf	??_main,w
   666  074A  00A0               	movwf	?_dis_num
   667  074B  120A  118A  2404   	fcall	_dis_num
      +       120A  118A         
   668                           
   669                           ;PR11.c: 140: send_char('.');
   670  0750  302E               	movlw	46
   671  0751  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   672                           
   673                           ;PR11.c: 141: dis_num(temporary2%10);
   674  0756  300A               	movlw	10
   675  0757  00F0               	movwf	?___lwmod
   676  0758  3000               	movlw	0
   677  0759  00F1               	movwf	?___lwmod+1
   678  075A  1283               	bcf	3,5	;RP0=0, select bank0
   679  075B  1303               	bcf	3,6	;RP1=0, select bank0
   680  075C  0837               	movf	_temporary2+1,w
   681  075D  01F3               	clrf	?___lwmod+3
   682  075E  07F3               	addwf	?___lwmod+3,f
   683  075F  0836               	movf	_temporary2,w
   684  0760  01F2               	clrf	?___lwmod+2
   685  0761  07F2               	addwf	?___lwmod+2,f
   686  0762  120A  118A  2278   	fcall	___lwmod
      +       120A  118A         
   687  0767  0870               	movf	?___lwmod,w
   688  0768  1283               	bcf	3,5	;RP0=0, select bank0
   689  0769  1303               	bcf	3,6	;RP1=0, select bank0
   690  076A  00AA               	movwf	??_main
   691  076B  0871               	movf	?___lwmod+1,w
   692  076C  00AB               	movwf	??_main+1
   693  076D  01AC               	clrf	??_main+2
   694  076E  01AD               	clrf	??_main+3
   695  076F  082D               	movf	??_main+3,w
   696  0770  00A3               	movwf	?_dis_num+3
   697  0771  082C               	movf	??_main+2,w
   698  0772  00A2               	movwf	?_dis_num+2
   699  0773  082B               	movf	??_main+1,w
   700  0774  00A1               	movwf	?_dis_num+1
   701  0775  082A               	movf	??_main,w
   702  0776  00A0               	movwf	?_dis_num
   703  0777  120A  118A  2404   	fcall	_dis_num
      +       120A  118A         
   704                           
   705                           ;PR11.c: 142: send_char(0b11011111);
   706  077C  30DF               	movlw	223
   707  077D  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   708                           
   709                           ;PR11.c: 143: send_char('C');
   710  0782  3043               	movlw	67
   711  0783  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   712                           
   713                           ;PR11.c: 144: send_char(' ');
   714  0788  3020               	movlw	32
   715  0789  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   716                           
   717                           ;PR11.c: 145: send_char(' ');
   718  078E  3020               	movlw	32
   719  078F  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
   720                           
   721                           ;PR11.c: 147: temperatureB=temporary2;
   722  0794  1283               	bcf	3,5	;RP0=0, select bank0
   723  0795  1303               	bcf	3,6	;RP1=0, select bank0
   724  0796  0837               	movf	_temporary2+1,w
   725  0797  01B3               	clrf	_temperatureB+1
   726  0798  07B3               	addwf	_temperatureB+1,f
   727  0799  0836               	movf	_temporary2,w
   728  079A  01B2               	clrf	_temperatureB
   729  079B  07B2               	addwf	_temperatureB,f
   730                           
   731                           ;PR11.c: 149: if((temperatureA>240)&&(temperatureB<230))
   732  079C  3000               	movlw	0
   733  079D  0231               	subwf	_temperatureA+1,w
   734  079E  30F1               	movlw	241
   735  079F  1903               	skipnz
   736  07A0  0230               	subwf	_temperatureA,w
   737  07A1  1C03               	skipc
   738  07A2  2FAE               	goto	l1474
   739  07A3  3000               	movlw	0
   740  07A4  0233               	subwf	_temperatureB+1,w
   741  07A5  30E6               	movlw	230
   742  07A6  1903               	skipnz
   743  07A7  0232               	subwf	_temperatureB,w
   744  07A8  1803               	skipnc
   745  07A9  2FAE               	goto	l1474
   746                           
   747                           ;PR11.c: 150: {
   748                           ;PR11.c: 151: RB2=1;
   749  07AA  1506               	bsf	6,2	;volatile
   750                           
   751                           ;PR11.c: 152: RB1=0;
   752  07AB  1086               	bcf	6,1	;volatile
   753                           
   754                           ;PR11.c: 153: RB4=1;
   755  07AC  1606               	bsf	6,4	;volatile
   756  07AD  2FE6               	goto	L3
   757  07AE                     l1474:	
   758                           ;PR11.c: 156: }
   759                           
   760                           ;PR11.c: 155: RB5=0;
   761                           
   762                           ;PR11.c: 154: RB3=0;
   763                           
   764                           
   765                           ;PR11.c: 158: else if((temperatureB>230)&&(temperatureA<240))
   766  07AE  3000               	movlw	0
   767  07AF  0233               	subwf	_temperatureB+1,w
   768  07B0  30E7               	movlw	231
   769  07B1  1903               	skipnz
   770  07B2  0232               	subwf	_temperatureB,w
   771  07B3  1C03               	skipc
   772  07B4  2FC1               	goto	l1480
   773  07B5  3000               	movlw	0
   774  07B6  0231               	subwf	_temperatureA+1,w
   775  07B7  30F0               	movlw	240
   776  07B8  1903               	skipnz
   777  07B9  0230               	subwf	_temperatureA,w
   778  07BA  1803               	skipnc
   779  07BB  2FC1               	goto	l1480
   780                           
   781                           ;PR11.c: 159: {
   782                           ;PR11.c: 160: RB2=0;
   783  07BC  1106               	bcf	6,2	;volatile
   784                           
   785                           ;PR11.c: 161: RB1=1;
   786  07BD  1486               	bsf	6,1	;volatile
   787                           
   788                           ;PR11.c: 162: RB4=0;
   789  07BE  1206               	bcf	6,4	;volatile
   790                           
   791                           ;PR11.c: 163: RB3=1;
   792  07BF  1586               	bsf	6,3	;volatile
   793  07C0  2FE7               	goto	L2
   794  07C1                     l1480:	
   795                           ;PR11.c: 165: }
   796                           
   797                           ;PR11.c: 164: RB5=0;
   798                           
   799                           
   800                           ;PR11.c: 167: else if((temperatureB>350)&&(temperatureA>400))
   801  07C1  3001               	movlw	1
   802  07C2  0233               	subwf	_temperatureB+1,w
   803  07C3  305F               	movlw	95
   804  07C4  1903               	skipnz
   805  07C5  0232               	subwf	_temperatureB,w
   806  07C6  1C03               	skipc
   807  07C7  2FD5               	goto	l1486
   808  07C8  3001               	movlw	1
   809  07C9  0231               	subwf	_temperatureA+1,w
   810  07CA  3091               	movlw	145
   811  07CB  1903               	skipnz
   812  07CC  0230               	subwf	_temperatureA,w
   813  07CD  1C03               	skipc
   814  07CE  2FD5               	goto	l1486
   815                           
   816                           ;PR11.c: 168: {
   817                           ;PR11.c: 169: RB2=1;
   818  07CF  1506               	bsf	6,2	;volatile
   819                           
   820                           ;PR11.c: 170: RB1=1;
   821  07D0  1486               	bsf	6,1	;volatile
   822                           
   823                           ;PR11.c: 171: RB4=1;
   824  07D1  1606               	bsf	6,4	;volatile
   825                           
   826                           ;PR11.c: 172: RB3=1;
   827  07D2  1586               	bsf	6,3	;volatile
   828                           
   829                           ;PR11.c: 173: RB5=1;
   830  07D3  1686               	bsf	6,5	;volatile
   831                           
   832                           ;PR11.c: 174: }
   833  07D4  2FE8               	goto	l1492
   834  07D5                     l1486:	
   835                           
   836                           ;PR11.c: 176: else if((temperatureB<350)&&(temperatureA<400))
   837  07D5  3001               	movlw	1
   838  07D6  0233               	subwf	_temperatureB+1,w
   839  07D7  305E               	movlw	94
   840  07D8  1903               	skipnz
   841  07D9  0232               	subwf	_temperatureB,w
   842  07DA  1803               	skipnc
   843  07DB  2FE8               	goto	l1492
   844  07DC  3001               	movlw	1
   845  07DD  0231               	subwf	_temperatureA+1,w
   846  07DE  3090               	movlw	144
   847  07DF  1903               	skipnz
   848  07E0  0230               	subwf	_temperatureA,w
   849  07E1  1803               	skipnc
   850  07E2  2FE8               	goto	l1492
   851                           
   852                           ;PR11.c: 177: {
   853                           ;PR11.c: 178: RB2=0;
   854  07E3  1106               	bcf	6,2	;volatile
   855                           
   856                           ;PR11.c: 179: RB1=0;
   857  07E4  1086               	bcf	6,1	;volatile
   858                           
   859                           ;PR11.c: 180: RB4=0;
   860  07E5  1206               	bcf	6,4	;volatile
   861  07E6                     L3:	
   862                           
   863                           ;PR11.c: 181: RB3=0;
   864  07E6  1186               	bcf	6,3	;volatile
   865  07E7                     L2:	
   866                           
   867                           ;PR11.c: 182: RB5=0;
   868  07E7  1286               	bcf	6,5	;volatile
   869  07E8                     l1492:	
   870                           
   871                           ;PR11.c: 183: }
   872                           ;PR11.c: 185: delay(2000);
   873  07E8  30D0               	movlw	208
   874  07E9  00F0               	movwf	?_delay
   875  07EA  3007               	movlw	7
   876  07EB  00F1               	movwf	?_delay+1
   877  07EC  120A  118A  220B   	fcall	_delay
      +       120A  118A         
   878  07F1  2E86               	goto	l1420
   879  07F2                     __end_of_main:	
   880                           
   881                           	psect	text1
   882  0278                     __ptext1:	
   883 ;; *************** function ___lwmod *****************
   884 ;; Defined at:
   885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.21\sources\pic\lwmod.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  divisor         2    0[COMMON] unsigned int 
   888 ;;  dividend        2    2[COMMON] unsigned int 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  counter         1    5[COMMON] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2    0[COMMON] unsigned int 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         4       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0
   902 ;;      Temps:          1       0       0       0       0
   903 ;;      Totals:         6       0       0       0       0
   904 ;;Total ram usage:        6 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function ___lwmod
   915  0278                     ___lwmod:	
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   919  0278  0871               	movf	___lwmod@divisor+1,w
   920  0279  0470               	iorwf	___lwmod@divisor,w
   921  027A  1903               	skipnz
   922  027B  2AA5               	goto	l1298
   923  027C  01F5               	clrf	___lwmod@counter
   924  027D  0AF5               	incf	___lwmod@counter,f
   925  027E                     l1288:	
   926  027E  1BF1               	btfsc	___lwmod@divisor+1,7
   927  027F  2A8C               	goto	l1290
   928  0280  3001               	movlw	1
   929  0281                     u765:	
   930  0281  1003               	clrc
   931  0282  0DF0               	rlf	___lwmod@divisor,f
   932  0283  0DF1               	rlf	___lwmod@divisor+1,f
   933  0284  3EFF               	addlw	-1
   934  0285  1D03               	skipz
   935  0286  2A81               	goto	u765
   936  0287  3001               	movlw	1
   937  0288  00F4               	movwf	??___lwmod
   938  0289  0874               	movf	??___lwmod,w
   939  028A  07F5               	addwf	___lwmod@counter,f
   940  028B  2A7E               	goto	l1288
   941  028C                     l1290:	
   942  028C  0871               	movf	___lwmod@divisor+1,w
   943  028D  0273               	subwf	___lwmod@dividend+1,w
   944  028E  1D03               	skipz
   945  028F  2A92               	goto	u785
   946  0290  0870               	movf	___lwmod@divisor,w
   947  0291  0272               	subwf	___lwmod@dividend,w
   948  0292                     u785:	
   949  0292  1C03               	skipc
   950  0293  2A9A               	goto	l1294
   951  0294  0870               	movf	___lwmod@divisor,w
   952  0295  02F2               	subwf	___lwmod@dividend,f
   953  0296  0871               	movf	___lwmod@divisor+1,w
   954  0297  1C03               	skipc
   955  0298  03F3               	decf	___lwmod@dividend+1,f
   956  0299  02F3               	subwf	___lwmod@dividend+1,f
   957  029A                     l1294:	
   958  029A  3001               	movlw	1
   959  029B                     u795:	
   960  029B  1003               	clrc
   961  029C  0CF1               	rrf	___lwmod@divisor+1,f
   962  029D  0CF0               	rrf	___lwmod@divisor,f
   963  029E  3EFF               	addlw	-1
   964  029F  1D03               	skipz
   965  02A0  2A9B               	goto	u795
   966  02A1  3001               	movlw	1
   967  02A2  02F5               	subwf	___lwmod@counter,f
   968  02A3  1D03               	btfss	3,2
   969  02A4  2A8C               	goto	l1290
   970  02A5                     l1298:	
   971  02A5  0873               	movf	___lwmod@dividend+1,w
   972  02A6  01F1               	clrf	?___lwmod+1
   973  02A7  07F1               	addwf	?___lwmod+1,f
   974  02A8  0872               	movf	___lwmod@dividend,w
   975  02A9  01F0               	clrf	?___lwmod
   976  02AA  07F0               	addwf	?___lwmod,f
   977  02AB  0008               	return
   978  02AC                     __end_of___lwmod:	
   979                           
   980                           	psect	text2
   981  02AC                     __ptext2:	
   982 ;; *************** function ___lwdiv *****************
   983 ;; Defined at:
   984 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.21\sources\pic\lwdiv.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  divisor         2    0[COMMON] unsigned int 
   987 ;;  dividend        2    2[COMMON] unsigned int 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  quotient        2    5[COMMON] unsigned int 
   990 ;;  counter         1    7[COMMON] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  2    0[COMMON] unsigned int 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         4       0       0       0       0
  1001 ;;      Locals:         3       0       0       0       0
  1002 ;;      Temps:          1       0       0       0       0
  1003 ;;      Totals:         8       0       0       0       0
  1004 ;;Total ram usage:        8 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function ___lwdiv
  1015  02AC                     ___lwdiv:	
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1019  02AC  01F5               	clrf	___lwdiv@quotient
  1020  02AD  01F6               	clrf	___lwdiv@quotient+1
  1021  02AE  0871               	movf	___lwdiv@divisor+1,w
  1022  02AF  0470               	iorwf	___lwdiv@divisor,w
  1023  02B0  1903               	skipnz
  1024  02B1  2AE3               	goto	l1276
  1025  02B2  01F7               	clrf	___lwdiv@counter
  1026  02B3  0AF7               	incf	___lwdiv@counter,f
  1027  02B4                     l1264:	
  1028  02B4  1BF1               	btfsc	___lwdiv@divisor+1,7
  1029  02B5  2AC2               	goto	l1266
  1030  02B6  3001               	movlw	1
  1031  02B7                     u695:	
  1032  02B7  1003               	clrc
  1033  02B8  0DF0               	rlf	___lwdiv@divisor,f
  1034  02B9  0DF1               	rlf	___lwdiv@divisor+1,f
  1035  02BA  3EFF               	addlw	-1
  1036  02BB  1D03               	skipz
  1037  02BC  2AB7               	goto	u695
  1038  02BD  3001               	movlw	1
  1039  02BE  00F4               	movwf	??___lwdiv
  1040  02BF  0874               	movf	??___lwdiv,w
  1041  02C0  07F7               	addwf	___lwdiv@counter,f
  1042  02C1  2AB4               	goto	l1264
  1043  02C2                     l1266:	
  1044  02C2  3001               	movlw	1
  1045  02C3                     u715:	
  1046  02C3  1003               	clrc
  1047  02C4  0DF5               	rlf	___lwdiv@quotient,f
  1048  02C5  0DF6               	rlf	___lwdiv@quotient+1,f
  1049  02C6  3EFF               	addlw	-1
  1050  02C7  1D03               	skipz
  1051  02C8  2AC3               	goto	u715
  1052  02C9  0871               	movf	___lwdiv@divisor+1,w
  1053  02CA  0273               	subwf	___lwdiv@dividend+1,w
  1054  02CB  1D03               	skipz
  1055  02CC  2ACF               	goto	u725
  1056  02CD  0870               	movf	___lwdiv@divisor,w
  1057  02CE  0272               	subwf	___lwdiv@dividend,w
  1058  02CF                     u725:	
  1059  02CF  1C03               	skipc
  1060  02D0  2AD8               	goto	l1272
  1061  02D1  0870               	movf	___lwdiv@divisor,w
  1062  02D2  02F2               	subwf	___lwdiv@dividend,f
  1063  02D3  0871               	movf	___lwdiv@divisor+1,w
  1064  02D4  1C03               	skipc
  1065  02D5  03F3               	decf	___lwdiv@dividend+1,f
  1066  02D6  02F3               	subwf	___lwdiv@dividend+1,f
  1067  02D7  1475               	bsf	___lwdiv@quotient,0
  1068  02D8                     l1272:	
  1069  02D8  3001               	movlw	1
  1070  02D9                     u735:	
  1071  02D9  1003               	clrc
  1072  02DA  0CF1               	rrf	___lwdiv@divisor+1,f
  1073  02DB  0CF0               	rrf	___lwdiv@divisor,f
  1074  02DC  3EFF               	addlw	-1
  1075  02DD  1D03               	skipz
  1076  02DE  2AD9               	goto	u735
  1077  02DF  3001               	movlw	1
  1078  02E0  02F7               	subwf	___lwdiv@counter,f
  1079  02E1  1D03               	btfss	3,2
  1080  02E2  2AC2               	goto	l1266
  1081  02E3                     l1276:	
  1082  02E3  0876               	movf	___lwdiv@quotient+1,w
  1083  02E4  01F1               	clrf	?___lwdiv+1
  1084  02E5  07F1               	addwf	?___lwdiv+1,f
  1085  02E6  0875               	movf	___lwdiv@quotient,w
  1086  02E7  01F0               	clrf	?___lwdiv
  1087  02E8  07F0               	addwf	?___lwdiv,f
  1088  02E9  0008               	return
  1089  02EA                     __end_of___lwdiv:	
  1090                           
  1091                           	psect	text3
  1092  0404                     __ptext3:	
  1093 ;; *************** function _dis_num *****************
  1094 ;; Defined at:
  1095 ;;		line 245 in file "../../Source File/PR11.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  data            4    0[BANK0 ] unsigned long 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  tenth           1    9[BANK0 ] unsigned char 
  1100 ;;  hundred         1    8[BANK0 ] unsigned char 
  1101 ;;  thousand        1    7[BANK0 ] unsigned char 
  1102 ;;  ten_thousand    1    6[BANK0 ] unsigned char 
  1103 ;;  hundred_thou    1    5[BANK0 ] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;		None               void
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, pclath, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       4       0       0       0
  1114 ;;      Locals:         0       5       0       0       0
  1115 ;;      Temps:          0       1       0       0       0
  1116 ;;      Totals:         0      10       0       0       0
  1117 ;;Total ram usage:       10 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    3
  1120 ;; This function calls:
  1121 ;;		_send_char
  1122 ;;		___lldiv
  1123 ;;		___llmod
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;;		_increment
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _dis_num
  1132  0404                     _dis_num:	
  1133                           
  1134                           ;PR11.c: 246: unsigned char hundred_thousand;
  1135                           ;PR11.c: 247: unsigned char ten_thousand;
  1136                           ;PR11.c: 248: unsigned char thousand;
  1137                           ;PR11.c: 249: unsigned char hundred;
  1138                           ;PR11.c: 250: unsigned char tenth;
  1139                           ;PR11.c: 252: hundred_thousand = data/100000;
  1140                           
  1141                           ;incstack = 0
  1142                           ; Regs used in _dis_num: [wreg+status,2+status,0+pclath+cstack]
  1143  0404  3000               	movlw	0
  1144  0405  00F3               	movwf	?___lldiv+3
  1145  0406  3001               	movlw	1
  1146  0407  00F2               	movwf	?___lldiv+2
  1147  0408  3086               	movlw	134
  1148  0409  00F1               	movwf	?___lldiv+1
  1149  040A  30A0               	movlw	160
  1150  040B  00F0               	movwf	?___lldiv
  1151  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1152  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1153  040E  0823               	movf	dis_num@data+3,w
  1154  040F  00F7               	movwf	?___lldiv+7
  1155  0410  0822               	movf	dis_num@data+2,w
  1156  0411  00F6               	movwf	?___lldiv+6
  1157  0412  0821               	movf	dis_num@data+1,w
  1158  0413  00F5               	movwf	?___lldiv+5
  1159  0414  0820               	movf	dis_num@data,w
  1160  0415  00F4               	movwf	?___lldiv+4
  1161  0416  120A  118A  2336   	fcall	___lldiv
      +       120A  118A         
  1162  041B  0870               	movf	?___lldiv,w
  1163  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1164  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1165  041E  00A4               	movwf	??_dis_num
  1166  041F  0824               	movf	??_dis_num,w
  1167  0420  00A5               	movwf	dis_num@hundred_thousand
  1168                           
  1169                           ;PR11.c: 253: data = data % 100000;
  1170  0421  3000               	movlw	0
  1171  0422  00F3               	movwf	?___llmod+3
  1172  0423  3001               	movlw	1
  1173  0424  00F2               	movwf	?___llmod+2
  1174  0425  3086               	movlw	134
  1175  0426  00F1               	movwf	?___llmod+1
  1176  0427  30A0               	movlw	160
  1177  0428  00F0               	movwf	?___llmod
  1178  0429  0823               	movf	dis_num@data+3,w
  1179  042A  00F7               	movwf	?___llmod+7
  1180  042B  0822               	movf	dis_num@data+2,w
  1181  042C  00F6               	movwf	?___llmod+6
  1182  042D  0821               	movf	dis_num@data+1,w
  1183  042E  00F5               	movwf	?___llmod+5
  1184  042F  0820               	movf	dis_num@data,w
  1185  0430  00F4               	movwf	?___llmod+4
  1186  0431  120A  118A  22EA   	fcall	___llmod
      +       120A  118A         
  1187  0436  0873               	movf	?___llmod+3,w
  1188  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0439  00A3               	movwf	dis_num@data+3
  1191  043A  0872               	movf	?___llmod+2,w
  1192  043B  00A2               	movwf	dis_num@data+2
  1193  043C  0871               	movf	?___llmod+1,w
  1194  043D  00A1               	movwf	dis_num@data+1
  1195  043E  0870               	movf	?___llmod,w
  1196  043F  00A0               	movwf	dis_num@data
  1197                           
  1198                           ;PR11.c: 254: ten_thousand = data/10000;
  1199  0440  3000               	movlw	0
  1200  0441  00F3               	movwf	?___lldiv+3
  1201  0442  3000               	movlw	0
  1202  0443  00F2               	movwf	?___lldiv+2
  1203  0444  3027               	movlw	39
  1204  0445  00F1               	movwf	?___lldiv+1
  1205  0446  3010               	movlw	16
  1206  0447  00F0               	movwf	?___lldiv
  1207  0448  0823               	movf	dis_num@data+3,w
  1208  0449  00F7               	movwf	?___lldiv+7
  1209  044A  0822               	movf	dis_num@data+2,w
  1210  044B  00F6               	movwf	?___lldiv+6
  1211  044C  0821               	movf	dis_num@data+1,w
  1212  044D  00F5               	movwf	?___lldiv+5
  1213  044E  0820               	movf	dis_num@data,w
  1214  044F  00F4               	movwf	?___lldiv+4
  1215  0450  120A  118A  2336   	fcall	___lldiv
      +       120A  118A         
  1216  0455  0870               	movf	?___lldiv,w
  1217  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0458  00A4               	movwf	??_dis_num
  1220  0459  0824               	movf	??_dis_num,w
  1221  045A  00A6               	movwf	dis_num@ten_thousand
  1222                           
  1223                           ;PR11.c: 255: data = data % 10000;
  1224  045B  3000               	movlw	0
  1225  045C  00F3               	movwf	?___llmod+3
  1226  045D  3000               	movlw	0
  1227  045E  00F2               	movwf	?___llmod+2
  1228  045F  3027               	movlw	39
  1229  0460  00F1               	movwf	?___llmod+1
  1230  0461  3010               	movlw	16
  1231  0462  00F0               	movwf	?___llmod
  1232  0463  0823               	movf	dis_num@data+3,w
  1233  0464  00F7               	movwf	?___llmod+7
  1234  0465  0822               	movf	dis_num@data+2,w
  1235  0466  00F6               	movwf	?___llmod+6
  1236  0467  0821               	movf	dis_num@data+1,w
  1237  0468  00F5               	movwf	?___llmod+5
  1238  0469  0820               	movf	dis_num@data,w
  1239  046A  00F4               	movwf	?___llmod+4
  1240  046B  120A  118A  22EA   	fcall	___llmod
      +       120A  118A         
  1241  0470  0873               	movf	?___llmod+3,w
  1242  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0473  00A3               	movwf	dis_num@data+3
  1245  0474  0872               	movf	?___llmod+2,w
  1246  0475  00A2               	movwf	dis_num@data+2
  1247  0476  0871               	movf	?___llmod+1,w
  1248  0477  00A1               	movwf	dis_num@data+1
  1249  0478  0870               	movf	?___llmod,w
  1250  0479  00A0               	movwf	dis_num@data
  1251                           
  1252                           ;PR11.c: 256: thousand = data / 1000;
  1253  047A  3000               	movlw	0
  1254  047B  00F3               	movwf	?___lldiv+3
  1255  047C  3000               	movlw	0
  1256  047D  00F2               	movwf	?___lldiv+2
  1257  047E  3003               	movlw	3
  1258  047F  00F1               	movwf	?___lldiv+1
  1259  0480  30E8               	movlw	232
  1260  0481  00F0               	movwf	?___lldiv
  1261  0482  0823               	movf	dis_num@data+3,w
  1262  0483  00F7               	movwf	?___lldiv+7
  1263  0484  0822               	movf	dis_num@data+2,w
  1264  0485  00F6               	movwf	?___lldiv+6
  1265  0486  0821               	movf	dis_num@data+1,w
  1266  0487  00F5               	movwf	?___lldiv+5
  1267  0488  0820               	movf	dis_num@data,w
  1268  0489  00F4               	movwf	?___lldiv+4
  1269  048A  120A  118A  2336   	fcall	___lldiv
      +       120A  118A         
  1270  048F  0870               	movf	?___lldiv,w
  1271  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0492  00A4               	movwf	??_dis_num
  1274  0493  0824               	movf	??_dis_num,w
  1275  0494  00A7               	movwf	dis_num@thousand
  1276                           
  1277                           ;PR11.c: 257: data = data % 1000;
  1278  0495  3000               	movlw	0
  1279  0496  00F3               	movwf	?___llmod+3
  1280  0497  3000               	movlw	0
  1281  0498  00F2               	movwf	?___llmod+2
  1282  0499  3003               	movlw	3
  1283  049A  00F1               	movwf	?___llmod+1
  1284  049B  30E8               	movlw	232
  1285  049C  00F0               	movwf	?___llmod
  1286  049D  0823               	movf	dis_num@data+3,w
  1287  049E  00F7               	movwf	?___llmod+7
  1288  049F  0822               	movf	dis_num@data+2,w
  1289  04A0  00F6               	movwf	?___llmod+6
  1290  04A1  0821               	movf	dis_num@data+1,w
  1291  04A2  00F5               	movwf	?___llmod+5
  1292  04A3  0820               	movf	dis_num@data,w
  1293  04A4  00F4               	movwf	?___llmod+4
  1294  04A5  120A  118A  22EA   	fcall	___llmod
      +       120A  118A         
  1295  04AA  0873               	movf	?___llmod+3,w
  1296  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1297  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1298  04AD  00A3               	movwf	dis_num@data+3
  1299  04AE  0872               	movf	?___llmod+2,w
  1300  04AF  00A2               	movwf	dis_num@data+2
  1301  04B0  0871               	movf	?___llmod+1,w
  1302  04B1  00A1               	movwf	dis_num@data+1
  1303  04B2  0870               	movf	?___llmod,w
  1304  04B3  00A0               	movwf	dis_num@data
  1305                           
  1306                           ;PR11.c: 258: hundred = data / 100;
  1307  04B4  3000               	movlw	0
  1308  04B5  00F3               	movwf	?___lldiv+3
  1309  04B6  3000               	movlw	0
  1310  04B7  00F2               	movwf	?___lldiv+2
  1311  04B8  3000               	movlw	0
  1312  04B9  00F1               	movwf	?___lldiv+1
  1313  04BA  3064               	movlw	100
  1314  04BB  00F0               	movwf	?___lldiv
  1315  04BC  0823               	movf	dis_num@data+3,w
  1316  04BD  00F7               	movwf	?___lldiv+7
  1317  04BE  0822               	movf	dis_num@data+2,w
  1318  04BF  00F6               	movwf	?___lldiv+6
  1319  04C0  0821               	movf	dis_num@data+1,w
  1320  04C1  00F5               	movwf	?___lldiv+5
  1321  04C2  0820               	movf	dis_num@data,w
  1322  04C3  00F4               	movwf	?___lldiv+4
  1323  04C4  120A  118A  2336   	fcall	___lldiv
      +       120A  118A         
  1324  04C9  0870               	movf	?___lldiv,w
  1325  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1326  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1327  04CC  00A4               	movwf	??_dis_num
  1328  04CD  0824               	movf	??_dis_num,w
  1329  04CE  00A8               	movwf	dis_num@hundred
  1330                           
  1331                           ;PR11.c: 259: data = data % 100;
  1332  04CF  3000               	movlw	0
  1333  04D0  00F3               	movwf	?___llmod+3
  1334  04D1  3000               	movlw	0
  1335  04D2  00F2               	movwf	?___llmod+2
  1336  04D3  3000               	movlw	0
  1337  04D4  00F1               	movwf	?___llmod+1
  1338  04D5  3064               	movlw	100
  1339  04D6  00F0               	movwf	?___llmod
  1340  04D7  0823               	movf	dis_num@data+3,w
  1341  04D8  00F7               	movwf	?___llmod+7
  1342  04D9  0822               	movf	dis_num@data+2,w
  1343  04DA  00F6               	movwf	?___llmod+6
  1344  04DB  0821               	movf	dis_num@data+1,w
  1345  04DC  00F5               	movwf	?___llmod+5
  1346  04DD  0820               	movf	dis_num@data,w
  1347  04DE  00F4               	movwf	?___llmod+4
  1348  04DF  120A  118A  22EA   	fcall	___llmod
      +       120A  118A         
  1349  04E4  0873               	movf	?___llmod+3,w
  1350  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1351  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1352  04E7  00A3               	movwf	dis_num@data+3
  1353  04E8  0872               	movf	?___llmod+2,w
  1354  04E9  00A2               	movwf	dis_num@data+2
  1355  04EA  0871               	movf	?___llmod+1,w
  1356  04EB  00A1               	movwf	dis_num@data+1
  1357  04EC  0870               	movf	?___llmod,w
  1358  04ED  00A0               	movwf	dis_num@data
  1359                           
  1360                           ;PR11.c: 260: tenth = data / 10;
  1361  04EE  3000               	movlw	0
  1362  04EF  00F3               	movwf	?___lldiv+3
  1363  04F0  3000               	movlw	0
  1364  04F1  00F2               	movwf	?___lldiv+2
  1365  04F2  3000               	movlw	0
  1366  04F3  00F1               	movwf	?___lldiv+1
  1367  04F4  300A               	movlw	10
  1368  04F5  00F0               	movwf	?___lldiv
  1369  04F6  0823               	movf	dis_num@data+3,w
  1370  04F7  00F7               	movwf	?___lldiv+7
  1371  04F8  0822               	movf	dis_num@data+2,w
  1372  04F9  00F6               	movwf	?___lldiv+6
  1373  04FA  0821               	movf	dis_num@data+1,w
  1374  04FB  00F5               	movwf	?___lldiv+5
  1375  04FC  0820               	movf	dis_num@data,w
  1376  04FD  00F4               	movwf	?___lldiv+4
  1377  04FE  120A  118A  2336   	fcall	___lldiv
      +       120A  118A         
  1378  0503  0870               	movf	?___lldiv,w
  1379  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0506  00A4               	movwf	??_dis_num
  1382  0507  0824               	movf	??_dis_num,w
  1383  0508  00A9               	movwf	dis_num@tenth
  1384                           
  1385                           ;PR11.c: 261: data = data % 10;
  1386  0509  3000               	movlw	0
  1387  050A  00F3               	movwf	?___llmod+3
  1388  050B  3000               	movlw	0
  1389  050C  00F2               	movwf	?___llmod+2
  1390  050D  3000               	movlw	0
  1391  050E  00F1               	movwf	?___llmod+1
  1392  050F  300A               	movlw	10
  1393  0510  00F0               	movwf	?___llmod
  1394  0511  0823               	movf	dis_num@data+3,w
  1395  0512  00F7               	movwf	?___llmod+7
  1396  0513  0822               	movf	dis_num@data+2,w
  1397  0514  00F6               	movwf	?___llmod+6
  1398  0515  0821               	movf	dis_num@data+1,w
  1399  0516  00F5               	movwf	?___llmod+5
  1400  0517  0820               	movf	dis_num@data,w
  1401  0518  00F4               	movwf	?___llmod+4
  1402  0519  120A  118A  22EA   	fcall	___llmod
      +       120A  118A         
  1403  051E  0873               	movf	?___llmod+3,w
  1404  051F  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0520  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0521  00A3               	movwf	dis_num@data+3
  1407  0522  0872               	movf	?___llmod+2,w
  1408  0523  00A2               	movwf	dis_num@data+2
  1409  0524  0871               	movf	?___llmod+1,w
  1410  0525  00A1               	movwf	dis_num@data+1
  1411  0526  0870               	movf	?___llmod,w
  1412  0527  00A0               	movwf	dis_num@data
  1413                           
  1414                           ;PR11.c: 263: if(hundred_thousand>0)
  1415  0528  0825               	movf	dis_num@hundred_thousand,w
  1416  0529  1903               	btfsc	3,2
  1417  052A  2D5E               	goto	l1350
  1418                           
  1419                           ;PR11.c: 264: {
  1420                           ;PR11.c: 265: send_char(hundred_thousand + 0x30);
  1421  052B  0825               	movf	dis_num@hundred_thousand,w
  1422  052C  3E30               	addlw	48
  1423  052D  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1424                           
  1425                           ;PR11.c: 266: send_char(ten_thousand + 0x30);
  1426  0532  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0533  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0534  0826               	movf	dis_num@ten_thousand,w
  1429  0535  3E30               	addlw	48
  1430  0536  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1431                           
  1432                           ;PR11.c: 267: send_char(thousand + 0x30);
  1433  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1434  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1435  053D  0827               	movf	dis_num@thousand,w
  1436  053E  3E30               	addlw	48
  1437  053F  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1438                           
  1439                           ;PR11.c: 268: send_char(hundred + 0x30);
  1440  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0546  0828               	movf	dis_num@hundred,w
  1443  0547  3E30               	addlw	48
  1444  0548  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1445                           
  1446                           ;PR11.c: 269: send_char(tenth + 0x30);
  1447  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1448  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1449  054F  0829               	movf	dis_num@tenth,w
  1450  0550  3E30               	addlw	48
  1451  0551  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1452                           
  1453                           ;PR11.c: 270: send_char(data + 0x30);
  1454  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0558  0820               	movf	dis_num@data,w
  1457  0559  3E30               	addlw	48
  1458  055A  120A  118A  2238   	fcall	_send_char
  1459                           
  1460                           ;PR11.c: 271: }
  1461  055D  0008               	return
  1462  055E                     l1350:	
  1463                           
  1464                           ;PR11.c: 273: else if(ten_thousand>0)
  1465  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1466  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0560  0826               	movf	dis_num@ten_thousand,w
  1468  0561  1903               	btfsc	3,2
  1469  0562  2D8D               	goto	l1354
  1470                           
  1471                           ;PR11.c: 274: {
  1472                           ;PR11.c: 275: send_char(ten_thousand + 0x30);
  1473  0563  0826               	movf	dis_num@ten_thousand,w
  1474  0564  3E30               	addlw	48
  1475  0565  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1476                           
  1477                           ;PR11.c: 276: send_char(thousand + 0x30);
  1478  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1479  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1480  056C  0827               	movf	dis_num@thousand,w
  1481  056D  3E30               	addlw	48
  1482  056E  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1483                           
  1484                           ;PR11.c: 277: send_char(hundred + 0x30);
  1485  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0575  0828               	movf	dis_num@hundred,w
  1488  0576  3E30               	addlw	48
  1489  0577  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1490                           
  1491                           ;PR11.c: 278: send_char(tenth + 0x30);
  1492  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1493  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1494  057E  0829               	movf	dis_num@tenth,w
  1495  057F  3E30               	addlw	48
  1496  0580  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1497                           
  1498                           ;PR11.c: 279: send_char(data + 0x30);
  1499  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0587  0820               	movf	dis_num@data,w
  1502  0588  3E30               	addlw	48
  1503  0589  120A  118A  2238   	fcall	_send_char
  1504                           
  1505                           ;PR11.c: 280: }
  1506  058C  0008               	return
  1507  058D                     l1354:	
  1508                           
  1509                           ;PR11.c: 281: else if(thousand>0)
  1510  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1511  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1512  058F  0827               	movf	dis_num@thousand,w
  1513  0590  1903               	btfsc	3,2
  1514  0591  2DB3               	goto	l1358
  1515                           
  1516                           ;PR11.c: 282: {
  1517                           ;PR11.c: 283: send_char(thousand + 0x30);
  1518  0592  0827               	movf	dis_num@thousand,w
  1519  0593  3E30               	addlw	48
  1520  0594  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1521                           
  1522                           ;PR11.c: 284: send_char(hundred + 0x30);
  1523  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1524  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1525  059B  0828               	movf	dis_num@hundred,w
  1526  059C  3E30               	addlw	48
  1527  059D  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1528                           
  1529                           ;PR11.c: 285: send_char(tenth + 0x30);
  1530  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1531  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1532  05A4  0829               	movf	dis_num@tenth,w
  1533  05A5  3E30               	addlw	48
  1534  05A6  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1535                           
  1536                           ;PR11.c: 286: send_char(data + 0x30);
  1537  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1538  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1539  05AD  0820               	movf	dis_num@data,w
  1540  05AE  3E30               	addlw	48
  1541  05AF  120A  118A  2238   	fcall	_send_char
  1542                           
  1543                           ;PR11.c: 287: }
  1544  05B2  0008               	return
  1545  05B3                     l1358:	
  1546                           
  1547                           ;PR11.c: 288: else if(hundred>0)
  1548  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1549  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1550  05B5  0828               	movf	dis_num@hundred,w
  1551  05B6  1903               	btfsc	3,2
  1552  05B7  2DD0               	goto	l1362
  1553                           
  1554                           ;PR11.c: 289: {
  1555                           ;PR11.c: 290: send_char(hundred + 0x30);
  1556  05B8  0828               	movf	dis_num@hundred,w
  1557  05B9  3E30               	addlw	48
  1558  05BA  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1559                           
  1560                           ;PR11.c: 291: send_char(tenth + 0x30);
  1561  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1562  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1563  05C1  0829               	movf	dis_num@tenth,w
  1564  05C2  3E30               	addlw	48
  1565  05C3  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1566                           
  1567                           ;PR11.c: 292: send_char(data + 0x30);
  1568  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1569  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1570  05CA  0820               	movf	dis_num@data,w
  1571  05CB  3E30               	addlw	48
  1572  05CC  120A  118A  2238   	fcall	_send_char
  1573                           
  1574                           ;PR11.c: 293: }
  1575  05CF  0008               	return
  1576  05D0                     l1362:	
  1577                           
  1578                           ;PR11.c: 294: else if(tenth>0)
  1579  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1580  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1581  05D2  0829               	movf	dis_num@tenth,w
  1582  05D3  1903               	btfsc	3,2
  1583  05D4  2DE4               	goto	l1366
  1584                           
  1585                           ;PR11.c: 295: {
  1586                           ;PR11.c: 296: send_char(tenth + 0x30);
  1587  05D5  0829               	movf	dis_num@tenth,w
  1588  05D6  3E30               	addlw	48
  1589  05D7  120A  118A  2238   	fcall	_send_char
      +       120A  118A         
  1590                           
  1591                           ;PR11.c: 297: send_char(data + 0x30);
  1592  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1593  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1594  05DE  0820               	movf	dis_num@data,w
  1595  05DF  3E30               	addlw	48
  1596  05E0  120A  118A  2238   	fcall	_send_char
  1597                           
  1598                           ;PR11.c: 298: }
  1599  05E3  0008               	return
  1600  05E4                     l1366:	
  1601                           
  1602                           ;PR11.c: 299: else send_char(data + 0x30);
  1603  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1604  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1605  05E6  0820               	movf	dis_num@data,w
  1606  05E7  3E30               	addlw	48
  1607  05E8  120A  118A  2238   	fcall	_send_char
  1608  05EB  0008               	return
  1609  05EC                     __end_of_dis_num:	
  1610                           
  1611                           	psect	text4
  1612  02EA                     __ptext4:	
  1613 ;; *************** function ___llmod *****************
  1614 ;; Defined at:
  1615 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.21\sources\pic\llmod.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  divisor         4    0[COMMON] unsigned long 
  1618 ;;  dividend        4    4[COMMON] unsigned long 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  counter         1    9[COMMON] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  4    0[COMMON] unsigned long 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         8       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0
  1632 ;;      Temps:          1       0       0       0       0
  1633 ;;      Totals:        10       0       0       0       0
  1634 ;;Total ram usage:       10 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_dis_num
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function ___llmod
  1645  02EA                     ___llmod:	
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1649  02EA  0873               	movf	___llmod@divisor+3,w
  1650  02EB  0472               	iorwf	___llmod@divisor+2,w
  1651  02EC  0471               	iorwf	___llmod@divisor+1,w
  1652  02ED  0470               	iorwf	___llmod@divisor,w
  1653  02EE  1903               	skipnz
  1654  02EF  2B2D               	goto	l1250
  1655  02F0  01F9               	clrf	___llmod@counter
  1656  02F1  0AF9               	incf	___llmod@counter,f
  1657  02F2                     l1240:	
  1658  02F2  1BF3               	btfsc	___llmod@divisor+3,7
  1659  02F3  2B02               	goto	l1242
  1660  02F4  3001               	movlw	1
  1661  02F5  00F8               	movwf	??___llmod
  1662  02F6                     u635:	
  1663  02F6  1003               	clrc
  1664  02F7  0DF0               	rlf	___llmod@divisor,f
  1665  02F8  0DF1               	rlf	___llmod@divisor+1,f
  1666  02F9  0DF2               	rlf	___llmod@divisor+2,f
  1667  02FA  0DF3               	rlf	___llmod@divisor+3,f
  1668  02FB  0BF8               	decfsz	??___llmod,f
  1669  02FC  2AF6               	goto	u635
  1670  02FD  3001               	movlw	1
  1671  02FE  00F8               	movwf	??___llmod
  1672  02FF  0878               	movf	??___llmod,w
  1673  0300  07F9               	addwf	___llmod@counter,f
  1674  0301  2AF2               	goto	l1240
  1675  0302                     l1242:	
  1676  0302  0873               	movf	___llmod@divisor+3,w
  1677  0303  0277               	subwf	___llmod@dividend+3,w
  1678  0304  1D03               	skipz
  1679  0305  2B10               	goto	u655
  1680  0306  0872               	movf	___llmod@divisor+2,w
  1681  0307  0276               	subwf	___llmod@dividend+2,w
  1682  0308  1D03               	skipz
  1683  0309  2B10               	goto	u655
  1684  030A  0871               	movf	___llmod@divisor+1,w
  1685  030B  0275               	subwf	___llmod@dividend+1,w
  1686  030C  1D03               	skipz
  1687  030D  2B10               	goto	u655
  1688  030E  0870               	movf	___llmod@divisor,w
  1689  030F  0274               	subwf	___llmod@dividend,w
  1690  0310                     u655:	
  1691  0310  1C03               	skipc
  1692  0311  2B20               	goto	l1246
  1693  0312  0870               	movf	___llmod@divisor,w
  1694  0313  02F4               	subwf	___llmod@dividend,f
  1695  0314  0871               	movf	___llmod@divisor+1,w
  1696  0315  1C03               	skipc
  1697  0316  0F71               	incfsz	___llmod@divisor+1,w
  1698  0317  02F5               	subwf	___llmod@dividend+1,f
  1699  0318  0872               	movf	___llmod@divisor+2,w
  1700  0319  1C03               	skipc
  1701  031A  0F72               	incfsz	___llmod@divisor+2,w
  1702  031B  02F6               	subwf	___llmod@dividend+2,f
  1703  031C  0873               	movf	___llmod@divisor+3,w
  1704  031D  1C03               	skipc
  1705  031E  0F73               	incfsz	___llmod@divisor+3,w
  1706  031F  02F7               	subwf	___llmod@dividend+3,f
  1707  0320                     l1246:	
  1708  0320  3001               	movlw	1
  1709  0321                     u665:	
  1710  0321  1003               	clrc
  1711  0322  0CF3               	rrf	___llmod@divisor+3,f
  1712  0323  0CF2               	rrf	___llmod@divisor+2,f
  1713  0324  0CF1               	rrf	___llmod@divisor+1,f
  1714  0325  0CF0               	rrf	___llmod@divisor,f
  1715  0326  3EFF               	addlw	-1
  1716  0327  1D03               	skipz
  1717  0328  2B21               	goto	u665
  1718  0329  3001               	movlw	1
  1719  032A  02F9               	subwf	___llmod@counter,f
  1720  032B  1D03               	btfss	3,2
  1721  032C  2B02               	goto	l1242
  1722  032D                     l1250:	
  1723  032D  0877               	movf	___llmod@dividend+3,w
  1724  032E  00F3               	movwf	?___llmod+3
  1725  032F  0876               	movf	___llmod@dividend+2,w
  1726  0330  00F2               	movwf	?___llmod+2
  1727  0331  0875               	movf	___llmod@dividend+1,w
  1728  0332  00F1               	movwf	?___llmod+1
  1729  0333  0874               	movf	___llmod@dividend,w
  1730  0334  00F0               	movwf	?___llmod
  1731  0335  0008               	return
  1732  0336                     __end_of___llmod:	
  1733                           
  1734                           	psect	text5
  1735  0238                     __ptext5:	
  1736 ;; *************** function _send_char *****************
  1737 ;; Defined at:
  1738 ;;		line 214 in file "../../Source File/PR11.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  data            1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  data            1    2[COMMON] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;		None               void
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         1       0       0       0       0
  1756 ;;Total ram usage:        1 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		_delay
  1761 ;;		_e_pulse
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;;		_dis_num
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           
  1769                           ;psect for function _send_char
  1770  0238                     _send_char:	
  1771                           
  1772                           ;incstack = 0
  1773                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  1774                           ;send_char@data stored from wreg
  1775  0238  00F2               	movwf	send_char@data
  1776                           
  1777                           ;PR11.c: 215: RA2=1;
  1778  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1779  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1780  023B  1505               	bsf	5,2	;volatile
  1781                           
  1782                           ;PR11.c: 216: PORTC=data;
  1783  023C  0872               	movf	send_char@data,w
  1784  023D  0087               	movwf	7	;volatile
  1785                           
  1786                           ;PR11.c: 217: delay(500);
  1787  023E  30F4               	movlw	244
  1788  023F  00F0               	movwf	?_delay
  1789  0240  3001               	movlw	1
  1790  0241  00F1               	movwf	?_delay+1
  1791  0242  120A  118A  220B   	fcall	_delay
      +       120A  118A         
  1792                           
  1793                           ;PR11.c: 218: e_pulse();
  1794  0247  120A  118A  2261   	fcall	_e_pulse
  1795  024A  0008               	return
  1796  024B                     __end_of_send_char:	
  1797                           
  1798                           	psect	text6
  1799  0216                     __ptext6:	
  1800 ;; *************** function _read_temp *****************
  1801 ;; Defined at:
  1802 ;;		line 335 in file "../../Source File/PR11.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  temp            2    2[COMMON] unsigned short 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2    0[COMMON] unsigned short 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         2       0       0       0       0
  1817 ;;      Locals:         2       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0
  1819 ;;      Totals:         4       0       0       0       0
  1820 ;;Total ram usage:        4 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _read_temp
  1831  0216                     _read_temp:	
  1832                           
  1833                           ;PR11.c: 336: unsigned short temp;
  1834                           ;PR11.c: 337: temp=result;
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _read_temp: [wreg+status,2+status,0]
  1838  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0218  082F               	movf	_result+1,w
  1841  0219  01F3               	clrf	read_temp@temp+1
  1842  021A  07F3               	addwf	read_temp@temp+1,f
  1843  021B  082E               	movf	_result,w
  1844  021C  01F2               	clrf	read_temp@temp
  1845  021D  07F2               	addwf	read_temp@temp,f
  1846                           
  1847                           ;PR11.c: 338: return temp;
  1848  021E  0873               	movf	read_temp@temp+1,w
  1849  021F  01F1               	clrf	?_read_temp+1
  1850  0220  07F1               	addwf	?_read_temp+1,f
  1851  0221  0872               	movf	read_temp@temp,w
  1852  0222  01F0               	clrf	?_read_temp
  1853  0223  07F0               	addwf	?_read_temp,f
  1854  0224  0008               	return
  1855  0225                     __end_of_read_temp:	
  1856                           
  1857                           	psect	text7
  1858  0394                     __ptext7:	
  1859 ;; *************** function _read_adc *****************
  1860 ;; Defined at:
  1861 ;;		line 317 in file "../../Source File/PR11.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  result_temp     4    4[BANK0 ] unsigned long 
  1866 ;;  i               2    8[BANK0 ] unsigned short 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;		None               void
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         0       6       0       0       0
  1878 ;;      Temps:          0       4       0       0       0
  1879 ;;      Totals:         0      10       0       0       0
  1880 ;;Total ram usage:       10 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    1
  1883 ;; This function calls:
  1884 ;;		___lldiv
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _read_adc
  1892  0394                     _read_adc:	
  1893                           
  1894                           ;PR11.c: 318: unsigned short i;
  1895                           ;PR11.c: 319: unsigned long result_temp=0;
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in _read_adc: [wreg+status,2+status,0+pclath+cstack]
  1899  0394  3000               	movlw	0
  1900  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0397  00A7               	movwf	read_adc@result_temp+3
  1903  0398  3000               	movlw	0
  1904  0399  00A6               	movwf	read_adc@result_temp+2
  1905  039A  3000               	movlw	0
  1906  039B  00A5               	movwf	read_adc@result_temp+1
  1907  039C  3000               	movlw	0
  1908  039D  00A4               	movwf	read_adc@result_temp
  1909                           
  1910                           ;PR11.c: 320: for(i=2000;i>0;i-=1)
  1911  039E  30D0               	movlw	208
  1912  039F  00A8               	movwf	read_adc@i
  1913  03A0  3007               	movlw	7
  1914  03A1  00A9               	movwf	read_adc@i+1
  1915  03A2  0829               	movf	read_adc@i+1,w
  1916  03A3  0428               	iorwf	read_adc@i,w
  1917  03A4  1903               	btfsc	3,2
  1918  03A5  2BE8               	goto	l1312
  1919  03A6                     l116:	
  1920                           
  1921                           ;PR11.c: 321: {
  1922                           ;PR11.c: 322: GO = 1;
  1923  03A6  151F               	bsf	31,2	;volatile
  1924  03A7                     l118:	
  1925                           ;PR11.c: 323: while(GO==1);
  1926                           
  1927  03A7  191F               	btfsc	31,2	;volatile
  1928  03A8  2BA7               	goto	l118
  1929                           
  1930                           ;PR11.c: 324: result=ADRESH;
  1931  03A9  081E               	movf	30,w	;volatile
  1932  03AA  00A0               	movwf	??_read_adc
  1933  03AB  01A1               	clrf	??_read_adc+1
  1934  03AC  0820               	movf	??_read_adc,w
  1935  03AD  00AE               	movwf	_result
  1936  03AE  0821               	movf	??_read_adc+1,w
  1937  03AF  00AF               	movwf	_result+1
  1938                           
  1939                           ;PR11.c: 325: result=result<<8;
  1940  03B0  082E               	movf	_result,w
  1941  03B1  00A1               	movwf	??_read_adc+1
  1942  03B2  01A0               	clrf	??_read_adc
  1943  03B3  0820               	movf	??_read_adc,w
  1944  03B4  00AE               	movwf	_result
  1945  03B5  0821               	movf	??_read_adc+1,w
  1946  03B6  00AF               	movwf	_result+1
  1947                           
  1948                           ;PR11.c: 326: result=result|ADRESL;
  1949  03B7  082E               	movf	_result,w
  1950  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1951  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1952  03BA  041E               	iorwf	30,w	;volatile
  1953  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1954  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1955  03BD  00A0               	movwf	??_read_adc
  1956  03BE  082F               	movf	_result+1,w
  1957  03BF  00A1               	movwf	??_read_adc+1
  1958  03C0  0820               	movf	??_read_adc,w
  1959  03C1  00AE               	movwf	_result
  1960  03C2  0821               	movf	??_read_adc+1,w
  1961  03C3  00AF               	movwf	_result+1
  1962                           
  1963                           ;PR11.c: 328: result_temp+=result;
  1964  03C4  082E               	movf	_result,w
  1965  03C5  00A0               	movwf	??_read_adc
  1966  03C6  082F               	movf	_result+1,w
  1967  03C7  00A1               	movwf	??_read_adc+1
  1968  03C8  01A2               	clrf	??_read_adc+2
  1969  03C9  01A3               	clrf	??_read_adc+3
  1970  03CA  0820               	movf	??_read_adc,w
  1971  03CB  07A4               	addwf	read_adc@result_temp,f
  1972  03CC  0821               	movf	??_read_adc+1,w
  1973  03CD  1103               	clrz
  1974  03CE  1803               	skipnc
  1975  03CF  3E01               	addlw	1
  1976  03D0  1D03               	btfss	3,2
  1977  03D1  07A5               	addwf	read_adc@result_temp+1,f
  1978  03D2  0822               	movf	??_read_adc+2,w
  1979  03D3  1103               	clrz
  1980  03D4  1803               	skipnc
  1981  03D5  3E01               	addlw	1
  1982  03D6  1D03               	btfss	3,2
  1983  03D7  07A6               	addwf	read_adc@result_temp+2,f
  1984  03D8  0823               	movf	??_read_adc+3,w
  1985  03D9  1103               	clrz
  1986  03DA  1803               	skipnc
  1987  03DB  3E01               	addlw	1
  1988  03DC  1D03               	btfss	3,2
  1989  03DD  07A7               	addwf	read_adc@result_temp+3,f
  1990  03DE  3001               	movlw	1
  1991  03DF  02A8               	subwf	read_adc@i,f
  1992  03E0  3000               	movlw	0
  1993  03E1  1C03               	skipc
  1994  03E2  03A9               	decf	read_adc@i+1,f
  1995  03E3  02A9               	subwf	read_adc@i+1,f
  1996  03E4  0829               	movf	read_adc@i+1,w
  1997  03E5  0428               	iorwf	read_adc@i,w
  1998  03E6  1D03               	skipz
  1999  03E7  2BA6               	goto	l116
  2000  03E8                     l1312:	
  2001                           
  2002                           ;PR11.c: 329: }
  2003                           ;PR11.c: 330: result = result_temp/2000;
  2004  03E8  3000               	movlw	0
  2005  03E9  00F3               	movwf	?___lldiv+3
  2006  03EA  3000               	movlw	0
  2007  03EB  00F2               	movwf	?___lldiv+2
  2008  03EC  3007               	movlw	7
  2009  03ED  00F1               	movwf	?___lldiv+1
  2010  03EE  30D0               	movlw	208
  2011  03EF  00F0               	movwf	?___lldiv
  2012  03F0  0827               	movf	read_adc@result_temp+3,w
  2013  03F1  00F7               	movwf	?___lldiv+7
  2014  03F2  0826               	movf	read_adc@result_temp+2,w
  2015  03F3  00F6               	movwf	?___lldiv+6
  2016  03F4  0825               	movf	read_adc@result_temp+1,w
  2017  03F5  00F5               	movwf	?___lldiv+5
  2018  03F6  0824               	movf	read_adc@result_temp,w
  2019  03F7  00F4               	movwf	?___lldiv+4
  2020  03F8  120A  118A  2336   	fcall	___lldiv
  2021  03FB  0871               	movf	?___lldiv+1,w
  2022  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2023  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2024  03FE  01AF               	clrf	_result+1
  2025  03FF  07AF               	addwf	_result+1,f
  2026  0400  0870               	movf	?___lldiv,w
  2027  0401  01AE               	clrf	_result
  2028  0402  07AE               	addwf	_result,f
  2029  0403  0008               	return
  2030  0404                     __end_of_read_adc:	
  2031                           
  2032                           	psect	text8
  2033  0336                     __ptext8:	
  2034 ;; *************** function ___lldiv *****************
  2035 ;; Defined at:
  2036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.21\sources\pic\lldiv.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  divisor         4    0[COMMON] unsigned long 
  2039 ;;  dividend        4    4[COMMON] unsigned long 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  quotient        4    9[COMMON] unsigned long 
  2042 ;;  counter         1   13[COMMON] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  4    0[COMMON] unsigned long 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         8       0       0       0       0
  2053 ;;      Locals:         5       0       0       0       0
  2054 ;;      Temps:          1       0       0       0       0
  2055 ;;      Totals:        14       0       0       0       0
  2056 ;;Total ram usage:       14 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_dis_num
  2062 ;;		_read_adc
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           
  2067                           ;psect for function ___lldiv
  2068  0336                     ___lldiv:	
  2069                           
  2070                           ;incstack = 0
  2071                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2072  0336  3000               	movlw	0
  2073  0337  00FC               	movwf	___lldiv@quotient+3
  2074  0338  3000               	movlw	0
  2075  0339  00FB               	movwf	___lldiv@quotient+2
  2076  033A  3000               	movlw	0
  2077  033B  00FA               	movwf	___lldiv@quotient+1
  2078  033C  3000               	movlw	0
  2079  033D  00F9               	movwf	___lldiv@quotient
  2080  033E  0873               	movf	___lldiv@divisor+3,w
  2081  033F  0472               	iorwf	___lldiv@divisor+2,w
  2082  0340  0471               	iorwf	___lldiv@divisor+1,w
  2083  0341  0470               	iorwf	___lldiv@divisor,w
  2084  0342  1903               	skipnz
  2085  0343  2B8B               	goto	l1230
  2086  0344  01FD               	clrf	___lldiv@counter
  2087  0345  0AFD               	incf	___lldiv@counter,f
  2088  0346                     l1216:	
  2089  0346  1BF3               	btfsc	___lldiv@divisor+3,7
  2090  0347  2B56               	goto	l1218
  2091  0348  3001               	movlw	1
  2092  0349  00F8               	movwf	??___lldiv
  2093  034A                     u565:	
  2094  034A  1003               	clrc
  2095  034B  0DF0               	rlf	___lldiv@divisor,f
  2096  034C  0DF1               	rlf	___lldiv@divisor+1,f
  2097  034D  0DF2               	rlf	___lldiv@divisor+2,f
  2098  034E  0DF3               	rlf	___lldiv@divisor+3,f
  2099  034F  0BF8               	decfsz	??___lldiv,f
  2100  0350  2B4A               	goto	u565
  2101  0351  3001               	movlw	1
  2102  0352  00F8               	movwf	??___lldiv
  2103  0353  0878               	movf	??___lldiv,w
  2104  0354  07FD               	addwf	___lldiv@counter,f
  2105  0355  2B46               	goto	l1216
  2106  0356                     l1218:	
  2107  0356  3001               	movlw	1
  2108  0357  00F8               	movwf	??___lldiv
  2109  0358                     u585:	
  2110  0358  1003               	clrc
  2111  0359  0DF9               	rlf	___lldiv@quotient,f
  2112  035A  0DFA               	rlf	___lldiv@quotient+1,f
  2113  035B  0DFB               	rlf	___lldiv@quotient+2,f
  2114  035C  0DFC               	rlf	___lldiv@quotient+3,f
  2115  035D  0BF8               	decfsz	??___lldiv,f
  2116  035E  2B58               	goto	u585
  2117  035F  0873               	movf	___lldiv@divisor+3,w
  2118  0360  0277               	subwf	___lldiv@dividend+3,w
  2119  0361  1D03               	skipz
  2120  0362  2B6D               	goto	u595
  2121  0363  0872               	movf	___lldiv@divisor+2,w
  2122  0364  0276               	subwf	___lldiv@dividend+2,w
  2123  0365  1D03               	skipz
  2124  0366  2B6D               	goto	u595
  2125  0367  0871               	movf	___lldiv@divisor+1,w
  2126  0368  0275               	subwf	___lldiv@dividend+1,w
  2127  0369  1D03               	skipz
  2128  036A  2B6D               	goto	u595
  2129  036B  0870               	movf	___lldiv@divisor,w
  2130  036C  0274               	subwf	___lldiv@dividend,w
  2131  036D                     u595:	
  2132  036D  1C03               	skipc
  2133  036E  2B7E               	goto	l1226
  2134  036F  0870               	movf	___lldiv@divisor,w
  2135  0370  02F4               	subwf	___lldiv@dividend,f
  2136  0371  0871               	movf	___lldiv@divisor+1,w
  2137  0372  1C03               	skipc
  2138  0373  0F71               	incfsz	___lldiv@divisor+1,w
  2139  0374  02F5               	subwf	___lldiv@dividend+1,f
  2140  0375  0872               	movf	___lldiv@divisor+2,w
  2141  0376  1C03               	skipc
  2142  0377  0F72               	incfsz	___lldiv@divisor+2,w
  2143  0378  02F6               	subwf	___lldiv@dividend+2,f
  2144  0379  0873               	movf	___lldiv@divisor+3,w
  2145  037A  1C03               	skipc
  2146  037B  0F73               	incfsz	___lldiv@divisor+3,w
  2147  037C  02F7               	subwf	___lldiv@dividend+3,f
  2148  037D  1479               	bsf	___lldiv@quotient,0
  2149  037E                     l1226:	
  2150  037E  3001               	movlw	1
  2151  037F                     u605:	
  2152  037F  1003               	clrc
  2153  0380  0CF3               	rrf	___lldiv@divisor+3,f
  2154  0381  0CF2               	rrf	___lldiv@divisor+2,f
  2155  0382  0CF1               	rrf	___lldiv@divisor+1,f
  2156  0383  0CF0               	rrf	___lldiv@divisor,f
  2157  0384  3EFF               	addlw	-1
  2158  0385  1D03               	skipz
  2159  0386  2B7F               	goto	u605
  2160  0387  3001               	movlw	1
  2161  0388  02FD               	subwf	___lldiv@counter,f
  2162  0389  1D03               	btfss	3,2
  2163  038A  2B56               	goto	l1218
  2164  038B                     l1230:	
  2165  038B  087C               	movf	___lldiv@quotient+3,w
  2166  038C  00F3               	movwf	?___lldiv+3
  2167  038D  087B               	movf	___lldiv@quotient+2,w
  2168  038E  00F2               	movwf	?___lldiv+2
  2169  038F  087A               	movf	___lldiv@quotient+1,w
  2170  0390  00F1               	movwf	?___lldiv+1
  2171  0391  0879               	movf	___lldiv@quotient,w
  2172  0392  00F0               	movwf	?___lldiv
  2173  0393  0008               	return
  2174  0394                     __end_of___lldiv:	
  2175                           
  2176                           	psect	text9
  2177  024B                     __ptext9:	
  2178 ;; *************** function _lcd_goto *****************
  2179 ;; Defined at:
  2180 ;;		line 223 in file "../../Source File/PR11.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  data            1    wreg     unsigned char 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  data            1    4[COMMON] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;		None               void
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         1       0       0       0       0
  2196 ;;      Temps:          1       0       0       0       0
  2197 ;;      Totals:         2       0       0       0       0
  2198 ;;Total ram usage:        2 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    3
  2201 ;; This function calls:
  2202 ;;		_send_config
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;;		_increment
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _lcd_goto
  2211  024B                     _lcd_goto:	
  2212                           
  2213                           ;incstack = 0
  2214                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2215                           ;lcd_goto@data stored from wreg
  2216  024B  00F4               	movwf	lcd_goto@data
  2217                           
  2218                           ;PR11.c: 224: if(data<16)
  2219  024C  3010               	movlw	16
  2220  024D  0274               	subwf	lcd_goto@data,w
  2221  024E  1803               	skipnc
  2222  024F  2A56               	goto	l1340
  2223                           
  2224                           ;PR11.c: 225: {
  2225                           ;PR11.c: 226: send_config(0x80+data);
  2226  0250  0874               	movf	lcd_goto@data,w
  2227  0251  3E80               	addlw	128
  2228  0252  120A  118A  2225   	fcall	_send_config
  2229                           
  2230                           ;PR11.c: 227: }
  2231  0255  0008               	return
  2232  0256                     l1340:	
  2233                           
  2234                           ;PR11.c: 228: else
  2235                           ;PR11.c: 229: {
  2236                           ;PR11.c: 230: data=data-20;
  2237  0256  0874               	movf	lcd_goto@data,w
  2238  0257  3EEC               	addlw	236
  2239  0258  00F3               	movwf	??_lcd_goto
  2240  0259  0873               	movf	??_lcd_goto,w
  2241  025A  00F4               	movwf	lcd_goto@data
  2242                           
  2243                           ;PR11.c: 231: send_config(0xc0+data);
  2244  025B  0874               	movf	lcd_goto@data,w
  2245  025C  3EC0               	addlw	192
  2246  025D  120A  118A  2225   	fcall	_send_config
  2247  0260  0008               	return
  2248  0261                     __end_of_lcd_goto:	
  2249                           
  2250                           	psect	text10
  2251  0225                     __ptext10:	
  2252 ;; *************** function _send_config *****************
  2253 ;; Defined at:
  2254 ;;		line 198 in file "../../Source File/PR11.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  data            1    wreg     unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  data            1    2[COMMON] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;		None               void
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       0       0       0       0
  2269 ;;      Locals:         1       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0
  2271 ;;      Totals:         1       0       0       0       0
  2272 ;;Total ram usage:        1 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		_delay
  2277 ;;		_e_pulse
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;;		_lcd_goto
  2281 ;;		_lcd_clr
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _send_config
  2287  0225                     _send_config:	
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  2291                           ;send_config@data stored from wreg
  2292  0225  00F2               	movwf	send_config@data
  2293                           
  2294                           ;PR11.c: 199: RA2=0;
  2295  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0228  1105               	bcf	5,2	;volatile
  2298                           
  2299                           ;PR11.c: 200: PORTC=data;
  2300  0229  0872               	movf	send_config@data,w
  2301  022A  0087               	movwf	7	;volatile
  2302                           
  2303                           ;PR11.c: 201: delay(500);
  2304  022B  30F4               	movlw	244
  2305  022C  00F0               	movwf	?_delay
  2306  022D  3001               	movlw	1
  2307  022E  00F1               	movwf	?_delay+1
  2308  022F  120A  118A  220B   	fcall	_delay
      +       120A  118A         
  2309                           
  2310                           ;PR11.c: 202: e_pulse();
  2311  0234  120A  118A  2261   	fcall	_e_pulse
  2312  0237  0008               	return
  2313  0238                     __end_of_send_config:	
  2314                           
  2315                           	psect	text11
  2316  0261                     __ptext11:	
  2317 ;; *************** function _e_pulse *****************
  2318 ;; Defined at:
  2319 ;;		line 206 in file "../../Source File/PR11.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;		None               void
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, pclath, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    1
  2340 ;; This function calls:
  2341 ;;		_delay
  2342 ;; This function is called by:
  2343 ;;		_send_config
  2344 ;;		_send_char
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _e_pulse
  2350  0261                     _e_pulse:	
  2351                           
  2352                           ;PR11.c: 207: RA5=1;
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  2356  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0263  1685               	bsf	5,5	;volatile
  2359                           
  2360                           ;PR11.c: 208: delay(500);
  2361  0264  30F4               	movlw	244
  2362  0265  00F0               	movwf	?_delay
  2363  0266  3001               	movlw	1
  2364  0267  00F1               	movwf	?_delay+1
  2365  0268  120A  118A  220B   	fcall	_delay
      +       120A  118A         
  2366                           
  2367                           ;PR11.c: 209: RA5=0;
  2368  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2369  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2370  026F  1285               	bcf	5,5	;volatile
  2371                           
  2372                           ;PR11.c: 210: delay(500);
  2373  0270  30F4               	movlw	244
  2374  0271  00F0               	movwf	?_delay
  2375  0272  3001               	movlw	1
  2376  0273  00F1               	movwf	?_delay+1
  2377  0274  120A  118A  220B   	fcall	_delay
  2378  0277  0008               	return
  2379  0278                     __end_of_e_pulse:	
  2380                           
  2381                           	psect	text12
  2382  020B                     __ptext12:	
  2383 ;; *************** function _delay *****************
  2384 ;; Defined at:
  2385 ;;		line 344 in file "../../Source File/PR11.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  i               2    0[COMMON] unsigned short 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;		None               void
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2399 ;;      Params:         2       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0
  2402 ;;      Totals:         2       0       0       0       0
  2403 ;;Total ram usage:        2 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;;		_send_config
  2410 ;;		_e_pulse
  2411 ;;		_send_char
  2412 ;;		_lcd_clr
  2413 ;;		_increment
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _delay
  2419  020B                     _delay:	
  2420                           
  2421                           ;PR11.c: 345: for(;i>0;i--);
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _delay: [wreg+status,2+status,0]
  2425  020B  0871               	movf	delay@i+1,w
  2426  020C  0470               	iorwf	delay@i,w
  2427  020D  1903               	btfsc	3,2
  2428  020E  0008               	return
  2429  020F  3001               	movlw	1
  2430  0210  02F0               	subwf	delay@i,f
  2431  0211  3000               	movlw	0
  2432  0212  1C03               	skipc
  2433  0213  03F1               	decf	delay@i+1,f
  2434  0214  02F1               	subwf	delay@i+1,f
  2435  0215  2A0B               	goto	_delay
  2436  0216                     __end_of_delay:	
  2437  007E                     btemp	set	126	;btemp
  2438  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?_read_temp	unsigned short  size(1) Largest target is 0

    ?___llmod	unsigned long  size(1) Largest target is 0

    ?___lldiv	unsigned long  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _dis_num->___lldiv
    _send_char->_delay
    _read_adc->___lldiv
    _lcd_goto->_send_config
    _send_config->_delay
    _e_pulse->_delay

Critical Paths under _main in BANK0

    _main->_read_adc
    _main->_dis_num

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2281
                                             10 BANK0      4     4      0
                        _send_config
                           _lcd_goto
                          _send_char
                           _read_adc
                          _read_temp
                            _dis_num
                              _delay
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     159
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     162
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _dis_num                                             10     6      4    1235
                                              0 BANK0     10     6      4
                          _send_char
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     159
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0     112
                                              2 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (1) _read_temp                                            4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _read_adc                                            10    10      0     232
                                              0 BANK0     10    10      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     162
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     201
                                              3 COMMON     2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (2) _send_config                                          1     1      0     112
                                              2 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (3) _e_pulse                                              0     0      0      45
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send_config
     _delay
     _e_pulse
       _delay
   _lcd_goto
     _send_config
       _delay
       _e_pulse
         _delay
   _send_char
     _delay
     _e_pulse
       _delay
   _read_adc
     ___lldiv
   _read_temp
   _dis_num
     _send_char
       _delay
       _e_pulse
         _delay
     ___lldiv
     ___llmod
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _delay
   ___lwdiv
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       4       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jun 25 12:31:38 2015

            __CFG_CP$OFF 0000                       _GO 00FA                      l116 03A6  
                    l118 03A7                      _RA2 002A                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _RA5 002D  
                    _RB4 0034                      _RB5 0035             __CFG_CPD$OFF 0000  
                    u605 037F                      u635 02F6                      u715 02C3  
                    u565 034A                      u725 02CF                      u655 0310  
                    u735 02D9                      u585 0358                      u665 0321  
                    u595 036D                      u765 0281                      u695 02B7  
                    u785 0292                      u795 029B             __CFG_FOSC$HS 0000  
        send_config@data 0072             __CFG_LVP$OFF 0000                     l1230 038B  
                   l1216 0346                     l1312 03E8                     l1240 02F2  
                   l1226 037E                     l1218 0356                     l1242 0302  
                   l1250 032D                     l1340 0256                     l1420 0686  
                   l1246 0320                     l1350 055E                     l1272 02D8  
                   l1264 02B4                     l1362 05D0                     l1354 058D  
                   l1266 02C2                     l1290 028C                     l1276 02E3  
                   l1366 05E4                     l1358 05B3                     l1294 029A  
                   l1288 027E                     l1480 07C1                     l1298 02A5  
                   l1474 07AE                     l1492 07E8                     l1486 07D5  
           __CFG_WRT$OFF 0000                     _main 05EC                     btemp 007E  
           lcd_goto@data 0074                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000          __end_of___lldiv 0394          __end_of___llmod 0336  
         __CFG_DEBUG$OFF 0000          __end_of___lwdiv 02EA          __end_of___lwmod 02AC  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
          __CFG_PWRTE$ON 0000          __end_of_e_pulse 0278          __end_of_dis_num 05EC  
                  _delay 020B      read_adc@result_temp 0024           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07F2  
           __end_of_main 07F2                   ??_main 002A                   ?_delay 0070  
           ?_send_config 0070                   _ADCON0 001F                   _ADCON1 009F  
       ___llmod@dividend 0074                   _ADRESH 001E                   _ADRESL 009E  
       __end_of_lcd_goto 0261                ??___lldiv 0078                ??___llmod 0078  
              ??___lwdiv 0074                ??___lwmod 0074         __end_of_read_adc 0404  
                 delay@i 0070                ??_e_pulse 0072                   _result 002E  
              ??_dis_num 0024  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 0216                  ??_delay 0072               __pbssBANK0 002E  
     __size_of_read_temp 000F               __pmaintext 05EC       __size_of_send_char 0013  
              ?_lcd_goto 0070     __size_of_send_config 0013                ?_read_adc 0070  
                ___lldiv 0336                  ___llmod 02EA                  ___lwdiv 02AC  
                ___lwmod 0278                  _e_pulse 0261                  __ptext0 0000  
                __ptext1 0278                  __ptext2 02AC                  __ptext3 0404  
                __ptext4 02EA                  __ptext5 0238                  __ptext6 0216  
                __ptext7 0394                  __ptext8 0336                  __ptext9 024B  
                _dis_num 0404        __end_of_read_temp 0225               ??_lcd_goto 0073  
   end_of_initialization 07FC        __end_of_send_char 024B               ??_read_adc 0020  
        ___lldiv@divisor 0070          ___lldiv@counter 007D            send_char@data 0072  
             _temporary1 0034               _temporary2 0036      start_initialization 07F2  
        ___llmod@divisor 0070          ___llmod@counter 0079      dis_num@ten_thousand 0026  
          __pcstackBANK0 0020  dis_num@hundred_thousand 0025        __size_of_lcd_goto 0016  
      __size_of_read_adc 0070         ___lwdiv@dividend 0072                 ?___lldiv 0070  
               ?___llmod 0070                 ?___lwdiv 0070                 ?___lwmod 0070  
               ?_e_pulse 0070                 ?_dis_num 0020            ??_send_config 0072  
       ___lwdiv@quotient 0075           __size_of_delay 000B                _read_temp 0216  
              _send_char 0238               ?_read_temp 0070      __end_of_send_config 0238  
             ?_send_char 0070                read_adc@i 0028         __size_of___lldiv 005E  
       __size_of___llmod 004C         __size_of___lwdiv 003E         __size_of___lwmod 0034  
       __size_of_e_pulse 0017         __size_of_dis_num 01E8          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 0225                 __ptext11 0261  
               __ptext12 020B                 _lcd_goto 024B                 _read_adc 0394  
          __size_of_main 0206              _send_config 0225              ??_read_temp 0072  
           _temperatureA 0030             _temperatureB 0032         ___lwmod@dividend 0072  
       ___lldiv@dividend 0074              ??_send_char 0072         ___lldiv@quotient 0079  
        ___lwmod@divisor 0070          ___lwmod@counter 0075            read_temp@temp 0072  
         dis_num@hundred 0028          dis_num@thousand 0027              dis_num@data 0020  
           dis_num@tenth 0029  
